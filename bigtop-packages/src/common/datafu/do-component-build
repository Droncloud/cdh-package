#!/bin/bash
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

set -ex

if [ -z "$GIT_REPO" ]; then

    if [ -n "${CAULDRON_BUILD}" ]; then
      IVYSETTINGS_OVERRIDE="-Divy.settings.file=${CAULDRON_TOP_DIR}/ivysettings.xml"
    else
      IVYSETTINGS_OVERRIDE=""
    fi

    ant ${IVYSETTINGS_OVERRIDE} release "$@"

    mkdir -p build

    mv dist/*.tar.gz build/datafu-$FULL_VERSION.tar.gz

    # Get rid of cobertura directory from the tarball
    pushd build; 
    tar -xzvf datafu-$FULL_VERSION.tar.gz;
    #Just making sure that our assumptions about the layout of the
    #tar file are correct
    numdirs=`find . -maxdepth 1 -type d -name 'datafu*' | wc -l` 
    if [ $numdirs -ne 1 ] ; then
        echo "Unexpected tar file layout in `pwd`" >&2
        exit 1
    fi
    dir_to_tar=`find . -maxdepth 1 -type d -name 'datafu*'`
    if [ $dir_to_tar != "./datafu-$FULL_VERSION" ] ; then
       mv $dir_to_tar datafu-$FULL_VERSION
    fi
    rm -rf datafu-$FULL_VERSION.tar.gz;
    rm -f datafu-$FULL_VERSION/licenses/autojar-LICENSE.txt;
    rm -f datafu-$FULL_VERSION/tools/autojar.jar;
    rm -rf datafu-$FULL_VERSION/cobertura;
    tar -czvf datafu-$FULL_VERSION.tar.gz datafu-$FULL_VERSION
    popd

    cp dist/datafu-$FULL_VERSION.jar build

    if [ -n "$DO_MAVEN_DEPLOY" ]; then
# Change to cloudera/maven directory, and install
# (and if called from CDH nightly build, deploy) artifacts into Maven repository
        cd cloudera/maven-packaging
        mvn $CAULDRON_MAVEN_EXTRA_ARGS -Dnot.cdh.release.build=false install -Dmaven.repo.local=${HOME}/.m2/repository${M2_REPO_SUFFIX} $DO_MAVEN_DEPLOY
    fi
else
    mvn $CAULDRON_MAVEN_EXTRA_ARGS -f cloudera-pom.xml process-resources
    git add .
    git commit -a -m "Temporary commit for tarball"
    mkdir -p build
    git archive --prefix=datafu-${FULL_VERSION}/ --format=tar HEAD |gzip > build/datafu-${FULL_VERSION}.tar.gz
fi
