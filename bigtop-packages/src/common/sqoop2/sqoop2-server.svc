# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

DAEMON="sqoop2-server"
DESC="Sqoop 2 Server"
EXEC_PATH="/usr/lib/sqoop2/bin/sqoop.sh"
SVC_USER="sqoop"
DAEMON_FLAGS=""
CONF_DIR="/etc/sqoop2/conf"
PIDFILE="/var/run/sqoop2/sqoop2-server-$SVC_USER.pid"
LOCKDIR="/var/lock/subsys"
LOCKFILE="sqoop2-server"

generate_functions() {

cat <<'__EOT__'
sqoop2_env() {
  export SQOOP2_USER="$SVC_USER"
  export SQOOP2_CONFIG="$CONF_DIR"
  export SQOOP2_LOG=${SQOOP2_LOG:-"/var/log/sqoop2/"}
  export SQOOP2_TEMP="$(dirname $PIDFILE)"
  export SQOOP2_SLEEP_TIME="$SLEEP_TIME"
  export SQOOP2_PID="$PIDFILE"
  export CATALINA_BIN="/usr/lib/bigtop-tomcat/bin"
  export CATALINA_PID="$PIDFILE"
  export CATALINA_TMPDIR="/var/tmp/sqoop2"
  export CATALINA_OPTS="-Xmx1024m -cp ${LIB_DIR}:${LIB_DIR}/lib"
  export CATALINA_OUT="${SQOOP2_LOG}/sqoop2-server.log"
}
__EOT__

}

generate_start() {

cat <<'__EOT__'
start() {
  [ -x $EXEC_PATH ] || exit $ERROR_PROGRAM_NOT_INSTALLED
  [ -d $CONF_DIR ] || exit $ERROR_PROGRAM_NOT_CONFIGURED
  log_success_msg "Starting ${DESC}: "

  sqoop2_env
  . /usr/lib/sqoop2/bin/sqoop2-env.sh

  su -s /bin/bash -c "${EXEC_PATH} server start $DAEMON_FLAGS" $SQOOP2_USER

  for second in {5..0}
  do
    checkstatusofproc
    RETVAL=$?
    if [ "$RETVAL" -eq $RETVAL_SUCCESS ] ; then
      break
    fi
    sleep 1
  done

  [ $RETVAL -eq $RETVAL_SUCCESS ] && touch $LOCKFILE
  return $RETVAL
}
__EOT__

}

generate_stop() {

cat <<'__EOT__'
stop() {
  log_success_msg "Stopping ${DESC}: "
  # FIXME: workaround for BIGTOP-537
  checkstatusofproc
  if [ "$?" = "$STATUS_RUNNING" ] ; then

    sqoop2_env
    . /usr/lib/sqoop2/bin/sqoop2-env.sh

    su -s /bin/bash $SVC_USER -c "${EXEC_PATH} server stop"

    if [ -f $PIDFILE ]; then
      PID=`cat $PIDFILE`
      if [ -n $PID ]; then
        kill -TERM $PID &>/dev/null
        for i in `seq 1 ${SQOOP2_SHUTDOWN_TIMEOUT}` ; do
          kill -0 ${SQOOP2_PID} &>/dev/null || break
          sleep 1
        done
        kill -KILL ${SQOOP2_PID} &>/dev/null
      fi
    fi

    RETVAL=$?
  else
    RETVAL=$RETVAL_SUCCESS
  fi

  [ $RETVAL -eq $RETVAL_SUCCESS ] && rm -f $LOCKFILE $PIDFILE
}
__EOT__

}
