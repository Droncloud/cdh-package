# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

DAEMON="kudu-tablet-server"
DESC="Kudu Tablet Server"
# FIXME: Can we rename this to not use an underscore? Can't use them in Debian package names, and it breaks convention with other components. Don't want to be inconsistent WITHIN Kudu, especially.
EXEC_PATH="/usr/bin/kudu-tablet_server"
PROC_NAME="kudu-tablet_server"
SVC_USER="kudu"
DEFAULTS_FILE="kudu"
DAEMON_FLAGS="\${KUDU_TABLET_SERVER_ARGS}"
CONF_DIR="/etc/kudu/conf"
RUNDIR=/var/run/kudu
PIDFILE="${RUNDIR}/${DAEMON}-${SVC_USER}.pid"
LOCKDIR="/var/lock/subsys"
LOCKFILE="kudu-tablet_server"
PRIORITY=90

generate_functions() {
cat <<'__EOT__'

export KUDU_LOG_DIR
export KUDU_TABLET_SERVER_ARGS

__EOT__
}

generate_start() {

cat <<'__EOT__'
start() {
  [ -x $EXEC_PATH ] || exit $ERROR_PROGRAM_NOT_INSTALLED
  [ -d $CONF_DIR ] || exit $ERROR_PROGRAM_NOT_CONFIGURED

  checkstatus >/dev/null 2>/dev/null
  status=$?
  if [ "$status" -eq "$STATUS_RUNNING" ]; then
    log_success_msg "${DESC} is running"
    exit 0
  fi

  /bin/su -s /bin/bash -c "/bin/bash -c 'cd ~ && echo \$\$ > ${PIDFILE} && exec ${EXEC_PATH} ${DAEMON_FLAGS} > ${KUDU_LOG_DIR}/kudu-tablet_server.out 2>&1' &" $SVC_USER
  RETVAL=$?

  if [ $RETVAL -eq $STATUS_RUNNING ]; then
    touch $LOCKFILE
    log_success_msg "Started ${DESC} (${DAEMON}): "
  else
    log_failure_msg "Failed to start ${DESC}. Return value: $RETVAL"
  fi

  return $RETVAL
}
__EOT__

}

generate_stop() {

cat <<'__EOT__'
stop() {
  killproc -p $PIDFILE $EXEC_PATH
  RETVAL=$?

  if [ $RETVAL -eq $RETVAL_SUCCESS ]; then
    log_success_msg "Stopped ${DESC}: "
    rm -f $LOCKFILE $PIDFILE
  else
    log_failure_msg "Failure to stop ${DESC}. Return value: $RETVAL"
  fi

  return $RETVAL
}
__EOT__

}
